#!/bin/sh### BEGIN INIT INFO
# Provides:          connect4UPi
# Required-Start:    $remote_fs $syslog $network
# Required-Stop:     $remote_fs $syslog $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Connect4U pi server initscript
# Description:       Connect4U pi server initscript
### END INIT INFO

# Author: Andrew <andrew.lai@mulesoft.com>
LOG_FILE=/var/log/connect4upi
CONFIG_FILE=/etc/connect4upi/config

PATH=/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/bin
DESC="Connect4UPi"
NAME=connect4UPi
HOME=/home/pi/pi
DAEMON=/usr/local/bin/node
DAEMON_ARGS="app.js -l $LOG_FILE -c $CONFIG_FILE"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

RETVAL=0
prog="Connect4UPi"

start() {
	echo -n $"Starting $prog:"

	start-stop-daemon --start --quiet --chdir $HOME --pidfile $PIDFILE --exec $DAEMON --test > /dev/null \
  	|| return 1
  start-stop-daemon --start --quiet --chdir $HOME --pidfile $PIDFILE --exec $DAEMON --background --make-pidfile -$file -- \
    $DAEMON_ARGS \
    || return 2
}

stop() {
	start-stop-daemon --stop --quiet --pidfile $PIDFILE --name $NAME
  RETVAL="$?"
  [ "$RETVAL" = 2 ] && return 2
  # Wait for children to finish too if this is a daemon that forks
  # and if the daemon is only ever run from this initscript.
  # If the above conditions are not satisfied then add some other code
  # that waits for the process to drop all resources that could be
  # needed by services started subsequently.  A last resort is to
  # sleep for some time.
  start-stop-daemon --stop --quiet --exec $DAEMON
  [ "$?" = 2 ] && return 2
  # Many daemons don't delete their pidfiles when they exit.
  rm -f $PIDFILE
  return "$RETVAL"
}

case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		stop
		start
		;;
	status)
		status $prog
		RETVAL=$?
		;;
	*)
		echo $"Usage: $0 {start|stop|restart|status}"
		RETVAL=1
esac
exit $RETVAL
